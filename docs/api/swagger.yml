openapi: 3.0.3
info:
  title: Swagger API Docs - OpenAPI 3.0
  description: ''
  license:
    name: MIT
    url: https://mit-license.org/
  version: 1.0.11
servers:
  - url: http://localhost:8000/api/v1
tags:
  - name: User
    description: A group of methods for working with user data
paths:
  /user:
    get:
      tags:
        - User
      summary: Get user by UUID
      description: A method for obtaining information about a user by his Identifier
      operationId: GetUserByUUID
      parameters:
        - name: uuid
          in: query
          description: User identifier in UUID format
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPResponse'
    post:
      tags:
        - User
      summary: Create user
      description: The method of creating a new user
      operationId: CreateUser
      requestBody:
        description: New user's data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUser'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPResponse'
    put:
      tags:
        - User
      summary: Update user by UUID
      description: The method of updating user data by its identifier
      operationId: UpdateUserByUUID
      parameters:
        - name: uuid
          in: query
          description: User identifier in UUID format
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: User data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUser'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPResponse'
    delete:
      tags:
        - User
      summary: Delete user by UUID
      description: The method of deleting a user by his Identifier
      operationId: DeleteUserByUUID
      parameters:
        - name: uuid
          in: query
          description: User identifier in UUID format
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPResponse'
components:
  schemas:
    RequestUser:
      type: object
      properties:
        full_name:
          type: string
          example: 'John Doe'
        phone:
          type: string
          example: '89855556575'
    ResponseUser:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: '57ebdf11-5ccf-4cae-b2d1-da513894202a'
        full_name:
          type: string
          example: 'John Doe'
        phone:
          type: string
          example: '89855556575'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    HTTPResponse:
      type: object
      properties:
        result:
          type: string
          example: error
        msg:
          type: string
          example: user not found
